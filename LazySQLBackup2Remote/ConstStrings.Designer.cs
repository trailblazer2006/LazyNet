//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dekart.LazyNet.SQLBackup2Remote {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConstStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConstStrings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dekart.LazyNet.SQLBackup2Remote.ConstStrings", typeof(ConstStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на after backup.
        /// </summary>
        internal static string AfterBackup {
            get {
                return ResourceManager.GetString("AfterBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom SQL script to run AFTER backup.
        /// </summary>
        internal static string AfterBackupSqlScriptCaption {
            get {
                return ResourceManager.GetString("AfterBackupSqlScriptCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lazy SQL Backup 2 Remote.
        /// </summary>
        internal static string ApplicationCaption {
            get {
                return ResourceManager.GetString("ApplicationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на at {0} day of month {1}.
        /// </summary>
        internal static string AtDaysMonths {
            get {
                return ResourceManager.GetString("AtDaysMonths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на At {0:T}.
        /// </summary>
        internal static string AtTime {
            get {
                return ResourceManager.GetString("AtTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на before backup.
        /// </summary>
        internal static string BeforeBackup {
            get {
                return ResourceManager.GetString("BeforeBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom SQL script to run BEFORE backup.
        /// </summary>
        internal static string BeforeBackupSqlScriptCaption {
            get {
                return ResourceManager.GetString("BeforeBackupSqlScriptCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Cleaning &apos;{1}&apos;.
        /// </summary>
        internal static string Cleaning {
            get {
                return ResourceManager.GetString("Cleaning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Compressing &apos;{1}&apos; to &apos;{2}&apos;.
        /// </summary>
        internal static string Compressing {
            get {
                return ResourceManager.GetString("Compressing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Compression completed (archive: &apos;{1}&apos;, size: {2:fs}).
        /// </summary>
        internal static string CompressionCompleted {
            get {
                return ResourceManager.GetString("CompressionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Connecting to &apos;{1}&apos;.
        /// </summary>
        internal static string ConnectingTo {
            get {
                return ResourceManager.GetString("ConnectingTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Connecting to SQL Server {1}.
        /// </summary>
        internal static string ConnectingToSql {
            get {
                return ResourceManager.GetString("ConnectingToSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Creating backup of [{1}] in &apos;{2}&apos; ({3}).
        /// </summary>
        internal static string CreatingBackup {
            get {
                return ResourceManager.GetString("CreatingBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Creating remote folder &apos;{1}&apos;.
        /// </summary>
        internal static string CreatingRemoteFolder {
            get {
                return ResourceManager.GetString("CreatingRemoteFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database {0}: Fail.
        /// </summary>
        internal static string DatabaseFail {
            get {
                return ResourceManager.GetString("DatabaseFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database {0}: Success.
        /// </summary>
        internal static string DatabaseSuccess {
            get {
                return ResourceManager.GetString("DatabaseSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete scheduled job {0}?.
        /// </summary>
        internal static string DeleteScheduledJob {
            get {
                return ResourceManager.GetString("DeleteScheduledJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DETAILS:.
        /// </summary>
        internal static string Details {
            get {
                return ResourceManager.GetString("Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Disconnecting from &apos;{1}&apos;.
        /// </summary>
        internal static string DisconnectingFrom {
            get {
                return ResourceManager.GetString("DisconnectingFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Download and restore finished.
        /// </summary>
        internal static string DownloadAndRestoreFinished {
            get {
                return ResourceManager.GetString("DownloadAndRestoreFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download &amp; Restore starting....
        /// </summary>
        internal static string DownloadAndRestoreStarting {
            get {
                return ResourceManager.GetString("DownloadAndRestoreStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Downloading &apos;{1}&apos; to &apos;{2}&apos; ({3}).
        /// </summary>
        internal static string Downloading {
            get {
                return ResourceManager.GetString("Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Downloading {0}... {1}%.
        /// </summary>
        internal static string DownloadingFileProgress {
            get {
                return ResourceManager.GetString("DownloadingFileProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This test e-mail confirms that your e-mail settings are set correctly.
        /// </summary>
        internal static string EmailBody {
            get {
                return ResourceManager.GetString("EmailBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A test e-mail has been sent to your mailboxes.
        ///Please verify if you have receive it!.
        /// </summary>
        internal static string EmailError {
            get {
                return ResourceManager.GetString("EmailError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} test e-mail.
        /// </summary>
        internal static string EmailSubject {
            get {
                return ResourceManager.GetString("EmailSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}: job {1} on machine {2} completed with errors.
        /// </summary>
        internal static string EmailSubjectFail {
            get {
                return ResourceManager.GetString("EmailSubjectFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}: job {1} on machine {2} completed successfully.
        /// </summary>
        internal static string EmailSubjectSuccess {
            get {
                return ResourceManager.GetString("EmailSubjectSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на every day.
        /// </summary>
        internal static string EveryDay {
            get {
                return ResourceManager.GetString("EveryDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на every {0} day.
        /// </summary>
        internal static string EveryDays {
            get {
                return ResourceManager.GetString("EveryDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на every week.
        /// </summary>
        internal static string EveryWeek {
            get {
                return ResourceManager.GetString("EveryWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на every {0} week.
        /// </summary>
        internal static string EveryWeeks {
            get {
                return ResourceManager.GetString("EveryWeeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Extracting &apos;{1}&apos; to &apos;{2}&apos;.
        /// </summary>
        internal static string Extracting {
            get {
                return ResourceManager.GetString("Extracting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extracting {0}... {1:fs} of {2:fs}.
        /// </summary>
        internal static string ExtractingFileProgress {
            get {
                return ResourceManager.GetString("ExtractingFileProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Extraction completed (backup: &apos;{1}&apos;, size: {2:fs}).
        /// </summary>
        internal static string ExtractionCompleted {
            get {
                return ResourceManager.GetString("ExtractionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fail report was not send to {0} ({1}).
        /// </summary>
        internal static string FailReportNotSent {
            get {
                return ResourceManager.GetString("FailReportNotSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fail report was send to {0} ({1}).
        /// </summary>
        internal static string FailReportSent {
            get {
                return ResourceManager.GetString("FailReportSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Information.
        /// </summary>
        internal static string Information {
            get {
                return ResourceManager.GetString("Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Job Files (*.jobx)|*.jobx.
        /// </summary>
        internal static string JobFilesFilter {
            get {
                return ResourceManager.GetString("JobFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Job finished.
        /// </summary>
        internal static string JobFinished {
            get {
                return ResourceManager.GetString("JobFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Job name: {0}.
        /// </summary>
        internal static string JobName {
            get {
                return ResourceManager.GetString("JobName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Local file has been found and verified.
        /// </summary>
        internal static string LocalFileVerified {
            get {
                return ResourceManager.GetString("LocalFileVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MacOffice.
        /// </summary>
        internal static string MacOffice {
            get {
                return ResourceManager.GetString("MacOffice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No recovery archive selected!.
        /// </summary>
        internal static string NoRecoveryArchiveSelected {
            get {
                return ResourceManager.GetString("NoRecoveryArchiveSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Office 2007.
        /// </summary>
        internal static string Office2007 {
            get {
                return ResourceManager.GetString("Office2007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Office 2010.
        /// </summary>
        internal static string Office2010 {
            get {
                return ResourceManager.GetString("Office2010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Office 2013.
        /// </summary>
        internal static string Office2013 {
            get {
                return ResourceManager.GetString("Office2013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на on.
        /// </summary>
        internal static string On {
            get {
                return ResourceManager.GetString("On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open.
        /// </summary>
        internal static string Open {
            get {
                return ResourceManager.GetString("Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question.
        /// </summary>
        internal static string Question {
            get {
                return ResourceManager.GetString("Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Remote file &apos;{1}&apos; not found.
        /// </summary>
        internal static string RemoteFileNotFound {
            get {
                return ResourceManager.GetString("RemoteFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Remote file size has been verified.
        /// </summary>
        internal static string RemoteFileVerified {
            get {
                return ResourceManager.GetString("RemoteFileVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Remote folder &apos;{1}&apos; not found.
        /// </summary>
        internal static string RemoteFolderNotFound {
            get {
                return ResourceManager.GetString("RemoteFolderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Removing &apos;{1}&apos; from &apos;{2}&apos;.
        /// </summary>
        internal static string RemovingFrom {
            get {
                return ResourceManager.GetString("RemovingFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Removing junk backup &apos;{1}&apos;.
        /// </summary>
        internal static string RemovingJunkBackup {
            get {
                return ResourceManager.GetString("RemovingJunkBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Restoring database &apos;{1}&apos;.
        /// </summary>
        internal static string RestoringDatabase {
            get {
                return ResourceManager.GetString("RestoringDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restoring database {0}... {1}.
        /// </summary>
        internal static string RestoringDatabaseProgress {
            get {
                return ResourceManager.GetString("RestoringDatabaseProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на run job failure.
        /// </summary>
        internal static string RunJobFailure {
            get {
                return ResourceManager.GetString("RunJobFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Running custom SQL script {1}.
        /// </summary>
        internal static string RunningCustomSqlScript {
            get {
                return ResourceManager.GetString("RunningCustomSqlScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save As.
        /// </summary>
        internal static string SaveAs {
            get {
                return ResourceManager.GetString("SaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на start at {0:d}.
        /// </summary>
        internal static string StartBoundary {
            get {
                return ResourceManager.GetString("StartBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; start download and restore {0:G}.
        /// </summary>
        internal static string StartDownloadAndRestore {
            get {
                return ResourceManager.GetString("StartDownloadAndRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starting....
        /// </summary>
        internal static string Starting {
            get {
                return ResourceManager.GetString("Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; start job {0:G}.
        /// </summary>
        internal static string StartJob {
            get {
                return ResourceManager.GetString("StartJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success report was not send to {0} ({1}).
        /// </summary>
        internal static string SuccessReportNotSent {
            get {
                return ResourceManager.GetString("SuccessReportNotSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Success report was send to {0}  ({1}).
        /// </summary>
        internal static string SuccessReportSent {
            get {
                return ResourceManager.GetString("SuccessReportSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SUMMARY:.
        /// </summary>
        internal static string Summary {
            get {
                return ResourceManager.GetString("Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Uploading &apos;{1}&apos; to &apos;{2}&apos; ({3}).
        /// </summary>
        internal static string Uploading {
            get {
                return ResourceManager.GetString("Uploading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:G} Zip file &apos;{1}&apos; not found.
        /// </summary>
        internal static string ZipFileNotFound {
            get {
                return ResourceManager.GetString("ZipFileNotFound", resourceCulture);
            }
        }
    }
}
